set -g mouse on
set-option -g prefix M-m
set-option -g history-limit 30000
# Open new panes in same directory
# Dracula Colours
# background_color '#282a36'
# current_line_color '#44475a'
# foreground_color '#f8f8f2'
# comment_color '#6272a4'
# cyan '#8be9fd'
# green '#50fa7b'
# orange '#ffb86c'
# pink '#ff79c6'
# purple '#bd93f9'
# red '#ff5555'
# yellow '#f1fa8c'


# Movement keys like vim
bind -r -T prefix h select-pane -L
bind -r -T prefix j select-pane -D
bind -r -T prefix k select-pane -U
bind -r -T prefix l select-pane -R

# My default mode-keys are emacs ones. 
# so, after the copy keys are pressed, "pbcopy" copies those to the system too.
bind -T copy-mode C-w send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode M-w send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode C-k                  send-keys -X copy-pipe-end-of-line-and-cancel "pbcopy"
bind -T copy-mode DoubleClick1Pane     select-pane \; send-keys -X select-word \; run-shell -d 0.3 \; send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode TripleClick1Pane     select-pane \; send-keys -X select-line \; run-shell -d 0.3 \; send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T root DoubleClick1Pane select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -H ; send-keys -X select-word ; run-shell -d 0.3 ; send-keys -X copy-pipe-and-cancel "pbcopy" }
bind -T root TripleClick1Pane select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -H ; send-keys -X select-line ; run-shell -d 0.3 ; send-keys -X copy-pipe-and-cancel "pbcopy" }

bind -T root M-0 select-window -t :0
bind -T root M-1 select-window -t :1
bind -T root M-2 select-window -t :2
bind -T root M-3 select-window -t :3
bind -T root M-4 select-window -t :4
bind -T root M-5 select-window -t :5
bind -T root M-6 select-window -t :6
bind -T root M-7 select-window -t :7
bind -T root M-8 select-window -t :8
bind -T root M-9 select-window -t :9

bind  c  new-window      -c "#{pane_current_path}"
bind  %  split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind m last-window
# From: https://gist.github.com/samoshkin/05e65f7f1c9b55d3fc7690b59d678734
#       -> From: https://www.freecodecamp.org/news/tmux-in-practice-local-and-nested-remote-tmux-sessions-4f7ba5db8795/

#Variables
# color_status_text="colour245"
# color_window_off_status_bg="colour238"
# color_light="white" #colour015
# color_dark="colour232" # black= colour232
# color_window_off_status_current_bg="colour254"


bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
  set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
  
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

set -g status-right "$wg_is_keys_off #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host"
